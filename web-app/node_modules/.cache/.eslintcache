[{"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/index.tsx":"1","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/reportWebVitals.ts":"2","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/App.tsx":"3","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/Calendar.tsx":"4","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/HomePage.tsx":"5","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/NavBar.tsx":"6","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/BottomBar.tsx":"7","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/SignIn.tsx":"8","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/CreateBooking.tsx":"9","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/Login.tsx":"10","/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/BookingForm.tsx":"11"},{"size":500,"mtime":1638184521370,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":1638184521376,"results":"14","hashOfConfig":"13"},{"size":624,"mtime":1641147266069,"results":"15","hashOfConfig":"13"},{"size":2374,"mtime":1641922592181,"results":"16","hashOfConfig":"13"},{"size":923,"mtime":1641130716228,"results":"17","hashOfConfig":"13"},{"size":1351,"mtime":1641372566508,"results":"18","hashOfConfig":"13"},{"size":404,"mtime":1641922576925,"results":"19","hashOfConfig":"13"},{"size":387,"mtime":1641372592820,"results":"20","hashOfConfig":"13"},{"size":383,"mtime":1641373017505,"results":"21","hashOfConfig":"13"},{"size":3883,"mtime":1641372684393,"results":"22","hashOfConfig":"13"},{"size":3951,"mtime":1641730997771,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"176u8qp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/index.tsx",[],["48","49"],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/reportWebVitals.ts",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/App.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/Calendar.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/HomePage.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/NavBar.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/BottomBar.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/SignIn.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/CreateBooking.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/Login.tsx",[],"/Users/jackpickard/Documents/Analytics/the_hut/web-app/src/components/BookingForm.tsx",["50"],"import React from \"react\";\nimport * as Yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MobileDatePicker from \"@mui/lab/MobileDatePicker\";\nimport AccountCircle from \"@mui/icons-material/AccountCircle\";\nimport VpnKeyIcon from \"@mui/icons-material/VpnKey\";\nimport Box from \"@mui/material/Box\";\n// Shape of form values\ninterface FormValues {\n  email: string;\n  password: string;\n}\n\ninterface OtherProps {\n  message: string;\n  initialEmail?: string;\n}\n\nconst styles = {\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\" as \"column\",\n    padding: \"25px\",\n    gap: \"25px\",\n  },\n  error: {\n    fontSize: 14,\n    color: \"red\",\n  },\n  button: {\n    backgroundColor: \"#6AAEB2\",\n    color: \"white\",\n    fontWeight: \"bold\" as \"bold\",\n    height: \"40px\",\n  },\n  input: {\n    backgroundColor: \"#A5E9F2\",\n  },\n  header: {\n    textAlign: \"center\" as \"center\",\n    color: \"#6AAEB2\",\n  },\n  bottomRow: {\n    display: \"flex\",\n    flexDirection: \"row\" as \"row\",\n    justifyContent: \"space-between\",\n  },\n  link: {\n    color: \"#ADADAD\",\n    cursor: \"pointer\",\n    textDecoration: \"underline\",\n  },\n};\n\n// Aside: You may see InjectedFormikProps<OtherProps, FormValues> instead of what comes below in older code.. InjectedFormikProps was artifact of when Formik only exported a HoC. It is also less flexible as it MUST wrap all props (it passes them through).\nconst InnerForm = (props: OtherProps) => {\n  const formik = useFormik({\n    initialValues: {\n      email: props.initialEmail || \"\",\n      password: \"\",\n    },\n    validationSchema: BookingValidation,\n\n    onSubmit: (values: FormValues) => {\n      return fetch(`${process.env.REACT_APP_API_URL!}/login`, {\n        method: \"POST\",\n        body: JSON.stringify(values),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          localStorage.setItem(\"token\", data.accessToken);\n          localStorage.setItem(\"idToken\", data.idToken);\n          window.location.reload();\n        });\n    },\n  });\n\n  const { message } = props;\n\n  return (\n    <form onSubmit={formik.handleSubmit} style={styles.form}>\n      <h1 style={styles.header}>{message}</h1>\n      <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\n        <AccountCircle sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n        <TextField\n          fullWidth\n          id=\"email\"\n          name=\"email\"\n          label=\"Email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n        />\n      </Box>\n      <Box sx={{ display: \"flex\", alignItems: \"flex-end\" }}>\n        <VpnKeyIcon sx={{ color: \"action.active\", mr: 1, my: 0.5 }} />\n        <TextField\n          fullWidth\n          id=\"password\"\n          name=\"password\"\n          label=\"Password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n        />\n      </Box>\n      <Button style={styles.button} variant=\"contained\" fullWidth type=\"submit\">\n        Submit\n      </Button>\n    </form>\n  );\n};\n\nconst BookingValidation = Yup.object().shape({\n  email: Yup.string().email().required(),\n  password: Yup.string()\n    .required(\"Please Enter your password\")\n    .matches(\n      /^.*(?=.{8,})((?=.*[!@#$%^&*()\\-_=+{};:,<.>]){1})(?=.*\\d)((?=.*[a-z]){1})((?=.*[A-Z]){1}).*$/,\n      \"Password must contain at least 8 characters, one uppercase, one number and one special case character\"\n    ),\n});\n\n// Wrap our form with the withFormik HoC\nexport const BookingForm = InnerForm;\n",{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":6,"column":8,"nodeType":"57","messageId":"58","endLine":6,"endColumn":24},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-unused-vars","'MobileDatePicker' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]